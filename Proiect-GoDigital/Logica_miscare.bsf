/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/
/*
Copyright (C) 1991-2010 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/
(header "symbol" (version "1.1"))
(symbol
	(rect 16 16 248 208)
	(text "Logica_miscare" (rect 5 0 81 12)(font "Arial" ))
	(text "inst" (rect 8 176 25 188)(font "Arial" ))
	(port
		(pt 0 32)
		(input)
		(text "senzor_1" (rect 0 0 43 12)(font "Arial" ))
		(text "senzor_1" (rect 21 27 64 39)(font "Arial" ))
		(line (pt 0 32)(pt 16 32)(line_width 1))
	)
	(port
		(pt 0 48)
		(input)
		(text "senzor_2" (rect 0 0 43 12)(font "Arial" ))
		(text "senzor_2" (rect 21 43 64 55)(font "Arial" ))
		(line (pt 0 48)(pt 16 48)(line_width 1))
	)
	(port
		(pt 0 64)
		(input)
		(text "senzor_3" (rect 0 0 43 12)(font "Arial" ))
		(text "senzor_3" (rect 21 59 64 71)(font "Arial" ))
		(line (pt 0 64)(pt 16 64)(line_width 1))
	)
	(port
		(pt 0 80)
		(input)
		(text "senzor_4" (rect 0 0 43 12)(font "Arial" ))
		(text "senzor_4" (rect 21 75 64 87)(font "Arial" ))
		(line (pt 0 80)(pt 16 80)(line_width 1))
	)
	(port
		(pt 0 96)
		(input)
		(text "senzor_5" (rect 0 0 43 12)(font "Arial" ))
		(text "senzor_5" (rect 21 91 64 103)(font "Arial" ))
		(line (pt 0 96)(pt 16 96)(line_width 1))
	)
	(port
		(pt 0 112)
		(input)
		(text "circuit[1..0]" (rect 0 0 55 12)(font "Arial" ))
		(text "circuit[1..0]" (rect 21 107 76 119)(font "Arial" ))
		(line (pt 0 112)(pt 16 112)(line_width 3))
	)
	(port
		(pt 232 32)
		(output)
		(text "directie_driverA[1..0]" (rect 0 0 102 12)(font "Arial" ))
		(text "directie_driverA[1..0]" (rect 109 27 211 39)(font "Arial" ))
		(line (pt 232 32)(pt 216 32)(line_width 3))
	)
	(port
		(pt 232 48)
		(output)
		(text "directie_driverB[1..0]" (rect 0 0 102 12)(font "Arial" ))
		(text "directie_driverB[1..0]" (rect 109 43 211 55)(font "Arial" ))
		(line (pt 232 48)(pt 216 48)(line_width 3))
	)
	(port
		(pt 232 64)
		(output)
		(text "semnal_dreapta" (rect 0 0 77 12)(font "Arial" ))
		(text "semnal_dreapta" (rect 134 59 211 71)(font "Arial" ))
		(line (pt 232 64)(pt 216 64)(line_width 1))
	)
	(port
		(pt 232 80)
		(output)
		(text "semnal_stanga" (rect 0 0 74 12)(font "Arial" ))
		(text "semnal_stanga" (rect 137 75 211 87)(font "Arial" ))
		(line (pt 232 80)(pt 216 80)(line_width 1))
	)
	(port
		(pt 232 96)
		(output)
		(text "stop" (rect 0 0 21 12)(font "Arial" ))
		(text "stop" (rect 190 91 211 103)(font "Arial" ))
		(line (pt 232 96)(pt 216 96)(line_width 1))
	)
	(port
		(pt 232 112)
		(output)
		(text "count_ture[7..0]" (rect 0 0 77 12)(font "Arial" ))
		(text "count_ture[7..0]" (rect 134 107 211 119)(font "Arial" ))
		(line (pt 232 112)(pt 216 112)(line_width 3))
	)
	(port
		(pt 232 128)
		(output)
		(text "factor_dc_driverA[11..0]" (rect 0 0 120 12)(font "Arial" ))
		(text "factor_dc_driverA[11..0]" (rect 91 123 211 135)(font "Arial" ))
		(line (pt 232 128)(pt 216 128)(line_width 3))
	)
	(port
		(pt 232 144)
		(output)
		(text "factor_dc_driverB[11..0]" (rect 0 0 120 12)(font "Arial" ))
		(text "factor_dc_driverB[11..0]" (rect 91 139 211 151)(font "Arial" ))
		(line (pt 232 144)(pt 216 144)(line_width 3))
	)
	(drawing
		(rectangle (rect 16 16 216 176)(line_width 1))
	)
)
